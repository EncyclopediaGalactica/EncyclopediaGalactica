<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=RemoveRedundantBraces/@EntryIndexedValue">HINT</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=Andras/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="Andras"&gt;&lt;CppCodeStyleCleanupDescriptor /&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;CSCodeStyleAttributes ArrangeTypeAccessModifier="True" ArrangeTypeMemberAccessModifier="True" SortModifiers="True" ArrangeArgumentsStyle="True" AddMissingParentheses="True" ArrangeBraces="True" ArrangeAttributes="True" ArrangeCodeBodyStyle="True" ArrangeTrailingCommas="True" ArrangeObjectCreation="True" ArrangeDefaultValue="True" ArrangeNamespaces="True" ArrangeNullCheckingPattern="True" /&gt;&lt;CSArrangeQualifiers&gt;True&lt;/CSArrangeQualifiers&gt;&lt;CSFixBuiltinTypeReferences&gt;True&lt;/CSFixBuiltinTypeReferences&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;/CSOptimizeUsings&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSharpFormatDocComments&gt;True&lt;/CSharpFormatDocComments&gt;&lt;CSharpReformatComments&gt;True&lt;/CSharpReformatComments&gt;&lt;IDEA_SETTINGS&gt;&amp;lt;profile version="1.0"&amp;gt;
  &amp;lt;option name="myName" value="Andras" /&amp;gt;
  &amp;lt;inspection_tool class="ES6ShorthandObjectProperty" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;
  &amp;lt;inspection_tool class="JSArrowFunctionBracesCanBeRemoved" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;
  &amp;lt;inspection_tool class="JSRemoveUnnecessaryParentheses" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;
  &amp;lt;inspection_tool class="JSUnnecessarySemicolon" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;
  &amp;lt;inspection_tool class="UnnecessaryContinueJS" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;
  &amp;lt;inspection_tool class="UnnecessaryLabelJS" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;
  &amp;lt;inspection_tool class="UnnecessaryLabelOnBreakStatementJS" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;
  &amp;lt;inspection_tool class="UnnecessaryLabelOnContinueStatementJS" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;
  &amp;lt;inspection_tool class="UnnecessaryReturnJS" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;
  &amp;lt;inspection_tool class="WrongPropertyKeyValueDelimiter" enabled="false" level="WARNING" enabled_by_default="false" /&amp;gt;
&amp;lt;/profile&amp;gt;&lt;/IDEA_SETTINGS&gt;&lt;RIDER_SETTINGS&gt;&amp;lt;profile&amp;gt;
  &amp;lt;Language id="CSS"&amp;gt;
    &amp;lt;Rearrange&amp;gt;false&amp;lt;/Rearrange&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="EditorConfig"&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="HTML"&amp;gt;
    &amp;lt;Rearrange&amp;gt;false&amp;lt;/Rearrange&amp;gt;
    &amp;lt;OptimizeImports&amp;gt;false&amp;lt;/OptimizeImports&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="HTTP Request"&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="Handlebars"&amp;gt;
    &amp;lt;Reformat&amp;gt;true&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="Ini"&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="JSON"&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="Jade"&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="JavaScript"&amp;gt;
    &amp;lt;Rearrange&amp;gt;false&amp;lt;/Rearrange&amp;gt;
    &amp;lt;OptimizeImports&amp;gt;false&amp;lt;/OptimizeImports&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="Markdown"&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="Properties"&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="RELAX-NG"&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="Razor"&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="SQL"&amp;gt;
    &amp;lt;Reformat&amp;gt;true&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="VueExpr"&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="XML"&amp;gt;
    &amp;lt;Rearrange&amp;gt;false&amp;lt;/Rearrange&amp;gt;
    &amp;lt;OptimizeImports&amp;gt;false&amp;lt;/OptimizeImports&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
  &amp;lt;Language id="yaml"&amp;gt;
    &amp;lt;Reformat&amp;gt;false&amp;lt;/Reformat&amp;gt;
  &amp;lt;/Language&amp;gt;
&amp;lt;/profile&amp;gt;&lt;/RIDER_SETTINGS&gt;&lt;XAMLCollapseEmptyTags&gt;False&lt;/XAMLCollapseEmptyTags&gt;&lt;/Profile&gt;</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_PARAMETER/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_EXISTING_PRIMARY_CONSTRUCTOR_DECLARATION_PARENS_ARRANGEMENT/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/MAX_FORMAL_PARAMETERS_ON_LINE/@EntryValue">10</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/MAX_PRIMARY_CONSTRUCTOR_PARAMETERS_ON_LINE/@EntryValue">0</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSOR_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">NEVER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_RECORD_FIELD_ATTRIBUTE_ON_SAME_LINE_EX/@EntryValue">ALWAYS</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_DECLARATION_LPAR/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_INVOCATION_LPAR/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARGUMENTS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_DECLARATION_RPAR/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_INVOCATION_RPAR/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_PRIMARY_CONSTRUCTOR_DECLARATION_LPAR/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_PRIMARY_CONSTRUCTOR_DECLARATION_RPAR/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PRIMARY_CONSTRUCTOR_PARAMETERS_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/AddImportsToDeepestScope/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/AllowAlias/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/CanUseGlobalAlias/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CSharpVarKeywordUsage/ForBuiltInTypes/@EntryValue">UseExplicitType</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpVarKeywordUsage/ForOtherTypes/@EntryValue">UseExplicitType</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpVarKeywordUsage/ForSimpleTypes/@EntryValue">UseExplicitType</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue">Required</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_REDUNDANT/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/CONSTRUCTOR_OR_DESTRUCTOR_BODY/@EntryValue">ExpressionBody</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/LOCAL_FUNCTION_BODY/@EntryValue">ExpressionBody</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/METHOD_OR_OPERATOR_BODY/@EntryValue">ExpressionBody</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/TRAILING_COMMA_IN_MULTILINE_LISTS/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/TRAILING_COMMA_IN_SINGLELINE_LISTS/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/USE_HEURISTICS_FOR_BODY_STYLE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpOtherInlayHintsOptions/ShowCommentBeforeLocalFunctionsWhenThereIsCodeInOuterScope/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpOtherInlayHintsOptions/ShowInferredDiscardNames/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpOtherInlayHintsOptions/ShowUnnamedTupleComponentTypeNamesHints/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/HideForBuilderLikeMethods/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/HideForMethodsWithSameNamedNumberedParameters/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/HideForNonLiterals/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/HideIfIntentionOfArgumentIsClearFromUsage/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/HideIfIntentionOfFirstParameterIsClearFromMethodName/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/HideIfMethodIsAnnotatedAsStringFormatMethod/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/NUnitParameterNameHintsOptions/OverrideInlineAutoDataArgumentNames/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/NUnitParameterNameHintsOptions/OverrideTestCaseArgumentNames/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/ShowForConstantsAndEnumMembers/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/ShowForLambdaExpressions/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/ShowForMethodInvocations/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/ShowForNonLiteralsInCaseOfMultipleParametersWithSameName/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/ShowForUnclearCreationExpression/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/ShowParameterNameHints/@EntryValue">Never</s:String>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/XUnitParameterNameHintsOptions/OverrideInlineAutoDataArgumentNames/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpParameterNameHintsOptions/XUnitParameterNameHintsOptions/OverrideInlineDataArgumentNames/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpTypeConversionHintsOptions/ShowHintsInSimplifiedMode/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpTypeConversionHintsOptions/ShowOnlyUserDefinedConversions/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/HideForLastInvocation/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/HideForSingleAndOneLineInvocations/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/HideTypeNameHintsForImplicitlyTypedVariablesWhenTypeIsEvident/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/HideTypeNameHintsForLambdaExpressionParametersWhenEvident/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/HideTypeNameHintsForTargetTypedNewExpressionsWhenEvident/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/HideTypeNameHintsWhenTypeNameIsEvidentFromVariableName/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/IncludePropertyFieldAndVariableAccessorsInChain/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/JoinHintsForMethodsWithSameReturnTypes/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/ShowMethodReturnTypeNameHints/@EntryValue">Never</s:String>
	<s:String x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/ShowTypeNameHintsForImplicitlyTypedVariables/@EntryValue">Never</s:String>
	<s:String x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/ShowTypeNameHintsForLambdaExpressionParameters/@EntryValue">Never</s:String>
	<s:String x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/ShowTypeNameHintsForLinqQueryRangeVariables/@EntryValue">Never</s:String>
	<s:String x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/ShowTypeNameHintsForPatternMatchingExpressions/@EntryValue">Never</s:String>
	<s:String x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/ShowTypeNameHintsForTargetTypedNewExpression/@EntryValue">Never</s:String>
	<s:Boolean x:Key="/Default/Environment/InlayHints/CSharpTypeNameHintsOptions/UseCompactTypeNamePresentation/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/Environment/InlayHints/GeneralInlayHintsOptions/DefaultMode/@EntryValue">Never</s:String>
	<s:Boolean x:Key="/Default/Environment/InlayHints/GeneralInlayHintsOptions/EnableInlayHints/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/InlayHints/GeneralInlayHintsOptions/EnablePushToHint/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean></wpf:ResourceDictionary>