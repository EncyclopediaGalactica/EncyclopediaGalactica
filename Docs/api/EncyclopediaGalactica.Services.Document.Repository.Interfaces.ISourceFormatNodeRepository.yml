### YamlMime:ManagedReference
items:
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  commentId: T:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  id: ISourceFormatNodeRepository
  parent: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  children:
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddAsync(EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode,System.Threading.CancellationToken)
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddChildNodeAsync(System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.DeleteAsync(System.Int64,System.Threading.CancellationToken)
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetAllAsync(System.Threading.CancellationToken)
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdAsync(System.Int64)
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithChildrenAsync(System.Int64,System.Threading.CancellationToken)
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync(System.Int64,System.Threading.CancellationToken)
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithRootNodeAsync(System.Int64,System.Threading.CancellationToken)
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.UpdateAsync(EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ISourceFormatNodeRepository
  nameWithType: ISourceFormatNodeRepository
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  type: Interface
  source:
    remote:
      path: Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
      branch: document_gql_endpoint
      repo: git@github.com:EncyclopediaGalactica/EncyclopediaGalactica.git
    id: ISourceFormatNodeRepository
    path: ../Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
    startLine: 9
  assemblies:
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces
  namespace: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  summary: SourceFormatRepository interface for managing stored data in the database.
  example: []
  syntax:
    content: public interface ISourceFormatNodeRepository
    content.vb: Public Interface ISourceFormatNodeRepository
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddAsync(EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode,System.Threading.CancellationToken)
  commentId: M:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddAsync(EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode,System.Threading.CancellationToken)
  id: AddAsync(EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode,System.Threading.CancellationToken)
  parent: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  langs:
  - csharp
  - vb
  name: AddAsync(SourceFormatNode, CancellationToken)
  nameWithType: ISourceFormatNodeRepository.AddAsync(SourceFormatNode, CancellationToken)
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddAsync(EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
      branch: document_gql_endpoint
      repo: git@github.com:EncyclopediaGalactica/EncyclopediaGalactica.git
    id: AddAsync
    path: ../Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
    startLine: 37
  assemblies:
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces
  namespace: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  summary: Adds a new entity to the database.
  example: []
  syntax:
    content: Task<SourceFormatNode> AddAsync(SourceFormatNode node, CancellationToken cancellationToken = default)
    parameters:
    - id: node
      type: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode
      description: Object with details of the new entity.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: <xref href="System.Threading.CancellationToken?text=Cancellation+token." data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}
      description: >-
        Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> which includes the new created <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref>

        entity.
    content.vb: Function AddAsync(node As SourceFormatNode, cancellationToken As CancellationToken = Nothing) As Task(Of SourceFormatNode)
  overload: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When input is null.
  - type: FluentValidation.ValidationException
    commentId: T:FluentValidation.ValidationException
    description: When input is invalid.
  - type: Microsoft.EntityFrameworkCore.DbUpdateException
    commentId: T:Microsoft.EntityFrameworkCore.DbUpdateException
    description: Error happened while saving into the database
  - type: Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException
    commentId: T:Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException
    description: Concurrency violation happened while saving into the database.
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: When operation is cancelled using <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddChildNodeAsync(System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)
  commentId: M:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddChildNodeAsync(System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)
  id: AddChildNodeAsync(System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)
  parent: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  langs:
  - csharp
  - vb
  name: AddChildNodeAsync(long, long, long, CancellationToken)
  nameWithType: ISourceFormatNodeRepository.AddChildNodeAsync(long, long, long, CancellationToken)
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddChildNodeAsync(long, long, long, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
      branch: document_gql_endpoint
      repo: git@github.com:EncyclopediaGalactica/EncyclopediaGalactica.git
    id: AddChildNodeAsync
    path: ../Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
    startLine: 67
  assemblies:
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces
  namespace: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  summary: Adds a <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref> to another <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref> as child node.
  example: []
  syntax:
    content: Task<SourceFormatNode> AddChildNodeAsync(long childId, long parentId, long rootNodeId, CancellationToken cancellationToken = default)
    parameters:
    - id: childId
      type: System.Int64
      description: Id of the entity which will be added as child.
    - id: parentId
      type: System.Int64
      description: Id of the parent entity
    - id: rootNodeId
      type: System.Int64
      description: Id of the root node
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}
      description: >-
        Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing asynchronous operation which includes

        the child object.
    content.vb: Function AddChildNodeAsync(childId As Long, parentId As Long, rootNodeId As Long, cancellationToken As CancellationToken = Nothing) As Task(Of SourceFormatNode)
  overload: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddChildNodeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Input is null
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Sequence does not contain any element
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: Operation is cancelled by a <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
  nameWithType.vb: ISourceFormatNodeRepository.AddChildNodeAsync(Long, Long, Long, CancellationToken)
  fullName.vb: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddChildNodeAsync(Long, Long, Long, System.Threading.CancellationToken)
  name.vb: AddChildNodeAsync(Long, Long, Long, CancellationToken)
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.UpdateAsync(EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode,System.Threading.CancellationToken)
  commentId: M:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.UpdateAsync(EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode,System.Threading.CancellationToken)
  id: UpdateAsync(EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode,System.Threading.CancellationToken)
  parent: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  langs:
  - csharp
  - vb
  name: UpdateAsync(SourceFormatNode, CancellationToken)
  nameWithType: ISourceFormatNodeRepository.UpdateAsync(SourceFormatNode, CancellationToken)
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.UpdateAsync(EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
      branch: document_gql_endpoint
      repo: git@github.com:EncyclopediaGalactica/EncyclopediaGalactica.git
    id: UpdateAsync
    path: ../Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
    startLine: 89
  assemblies:
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces
  namespace: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  summary: Updates the defined <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref> entity by the provided object property values.
  example: []
  syntax:
    content: Task<SourceFormatNode> UpdateAsync(SourceFormatNode node, CancellationToken cancellationToken = default)
    parameters:
    - id: node
      type: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode
      description: Object containing the new values.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}
      description: >-
        Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing asynchronous operation which includes the updated

        <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref>

        entity.
    content.vb: Function UpdateAsync(node As SourceFormatNode, cancellationToken As CancellationToken = Nothing) As Task(Of SourceFormatNode)
  overload: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.UpdateAsync*
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.DeleteAsync(System.Int64,System.Threading.CancellationToken)
  commentId: M:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.DeleteAsync(System.Int64,System.Threading.CancellationToken)
  id: DeleteAsync(System.Int64,System.Threading.CancellationToken)
  parent: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  langs:
  - csharp
  - vb
  name: DeleteAsync(long, CancellationToken)
  nameWithType: ISourceFormatNodeRepository.DeleteAsync(long, CancellationToken)
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.DeleteAsync(long, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
      branch: document_gql_endpoint
      repo: git@github.com:EncyclopediaGalactica/EncyclopediaGalactica.git
    id: DeleteAsync
    path: ../Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
    startLine: 110
  assemblies:
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces
  namespace: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  summary: Deletes the defined <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref> entity.
  example: []
  syntax:
    content: Task DeleteAsync(long id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int64
      description: Identifier of the entity will be deleted
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing asynchronous operation.
    content.vb: Function DeleteAsync(id As Long, cancellationToken As CancellationToken = Nothing) As Task
  overload: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.DeleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: When no such entity
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When null input provided.
  nameWithType.vb: ISourceFormatNodeRepository.DeleteAsync(Long, CancellationToken)
  fullName.vb: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.DeleteAsync(Long, System.Threading.CancellationToken)
  name.vb: DeleteAsync(Long, CancellationToken)
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetAllAsync(System.Threading.CancellationToken)
  commentId: M:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetAllAsync(System.Threading.CancellationToken)
  id: GetAllAsync(System.Threading.CancellationToken)
  parent: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  langs:
  - csharp
  - vb
  name: GetAllAsync(CancellationToken)
  nameWithType: ISourceFormatNodeRepository.GetAllAsync(CancellationToken)
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetAllAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
      branch: document_gql_endpoint
      repo: git@github.com:EncyclopediaGalactica/EncyclopediaGalactica.git
    id: GetAllAsync
    path: ../Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
    startLine: 136
  assemblies:
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces
  namespace: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  summary: Returns all <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref> entities as <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: Task<List<SourceFormatNode>> GetAllAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}}
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing asynchronous operation which includes the result.
    content.vb: Function GetAllAsync(cancellationToken As CancellationToken = Nothing) As Task(Of List(Of SourceFormatNode))
  overload: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetAllAsync*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: When operation is cancelled by a <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
  - type: Microsoft.EntityFrameworkCore.DbUpdateException
    commentId: T:Microsoft.EntityFrameworkCore.DbUpdateException
    description: When data cannot be persisted into database for some reason.
  - type: Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException
    commentId: T:Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException
    description: Persisting data into database is not possibly due to concurrency issues.
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithChildrenAsync(System.Int64,System.Threading.CancellationToken)
  commentId: M:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithChildrenAsync(System.Int64,System.Threading.CancellationToken)
  id: GetByIdWithChildrenAsync(System.Int64,System.Threading.CancellationToken)
  parent: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  langs:
  - csharp
  - vb
  name: GetByIdWithChildrenAsync(long, CancellationToken)
  nameWithType: ISourceFormatNodeRepository.GetByIdWithChildrenAsync(long, CancellationToken)
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithChildrenAsync(long, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
      branch: document_gql_endpoint
      repo: git@github.com:EncyclopediaGalactica/EncyclopediaGalactica.git
    id: GetByIdWithChildrenAsync
    path: ../Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
    startLine: 152
  assemblies:
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces
  namespace: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  summary: Returns the identified <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref> entity with its children entities.
  example: []
  syntax:
    content: Task<SourceFormatNode> GetByIdWithChildrenAsync(long id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int64
      description: Identifier of the desired entity.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing asynchronous operation which encloses the result.
    content.vb: Function GetByIdWithChildrenAsync(id As Long, cancellationToken As CancellationToken = Nothing) As Task(Of SourceFormatNode)
  overload: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithChildrenAsync*
  nameWithType.vb: ISourceFormatNodeRepository.GetByIdWithChildrenAsync(Long, CancellationToken)
  fullName.vb: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithChildrenAsync(Long, System.Threading.CancellationToken)
  name.vb: GetByIdWithChildrenAsync(Long, CancellationToken)
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdAsync(System.Int64)
  commentId: M:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdAsync(System.Int64)
  id: GetByIdAsync(System.Int64)
  parent: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  langs:
  - csharp
  - vb
  name: GetByIdAsync(long)
  nameWithType: ISourceFormatNodeRepository.GetByIdAsync(long)
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdAsync(long)
  type: Method
  source:
    remote:
      path: Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
      branch: document_gql_endpoint
      repo: git@github.com:EncyclopediaGalactica/EncyclopediaGalactica.git
    id: GetByIdAsync
    path: ../Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
    startLine: 165
  assemblies:
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces
  namespace: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  summary: Returns the identified <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref> entity without its related entities.
  example: []
  syntax:
    content: Task<SourceFormatNode> GetByIdAsync(long id)
    parameters:
    - id: id
      type: System.Int64
      description: Identifier of the desired entity.
    return:
      type: System.Threading.Tasks.Task{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing asynchronous operation which encloses the result.
    content.vb: Function GetByIdAsync(id As Long) As Task(Of SourceFormatNode)
  overload: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdAsync*
  nameWithType.vb: ISourceFormatNodeRepository.GetByIdAsync(Long)
  fullName.vb: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdAsync(Long)
  name.vb: GetByIdAsync(Long)
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync(System.Int64,System.Threading.CancellationToken)
  commentId: M:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync(System.Int64,System.Threading.CancellationToken)
  id: GetByIdWithFlatTreeAsync(System.Int64,System.Threading.CancellationToken)
  parent: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  langs:
  - csharp
  - vb
  name: GetByIdWithFlatTreeAsync(long, CancellationToken)
  nameWithType: ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync(long, CancellationToken)
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync(long, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
      branch: document_gql_endpoint
      repo: git@github.com:EncyclopediaGalactica/EncyclopediaGalactica.git
    id: GetByIdWithFlatTreeAsync
    path: ../Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
    startLine: 184
  assemblies:
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces
  namespace: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  summary: >-
    Returns a flatten (partial) tree which starting point is the identified <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref>

    entity. The flatten tree means a list of items belong to the root <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref>.

    Navigation property of <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref> considering which entities are child of an entity

    are populated.
  example: []
  syntax:
    content: Task<List<SourceFormatNode>> GetByIdWithFlatTreeAsync(long id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int64
      description: Identifier of the desired entity
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}}
      description: Returns <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing asynchronous operation which includes the result.
    content.vb: Function GetByIdWithFlatTreeAsync(id As Long, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of SourceFormatNode))
  overload: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync*
  nameWithType.vb: ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync(Long, CancellationToken)
  fullName.vb: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync(Long, System.Threading.CancellationToken)
  name.vb: GetByIdWithFlatTreeAsync(Long, CancellationToken)
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithRootNodeAsync(System.Int64,System.Threading.CancellationToken)
  commentId: M:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithRootNodeAsync(System.Int64,System.Threading.CancellationToken)
  id: GetByIdWithRootNodeAsync(System.Int64,System.Threading.CancellationToken)
  parent: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository
  langs:
  - csharp
  - vb
  name: GetByIdWithRootNodeAsync(long, CancellationToken)
  nameWithType: ISourceFormatNodeRepository.GetByIdWithRootNodeAsync(long, CancellationToken)
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithRootNodeAsync(long, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
      branch: document_gql_endpoint
      repo: git@github.com:EncyclopediaGalactica/EncyclopediaGalactica.git
    id: GetByIdWithRootNodeAsync
    path: ../Domains/Document/Document.Repository.Interfaces/ISourceFormatNodeRepository.cs
    startLine: 206
  assemblies:
  - EncyclopediaGalactica.Services.Document.Repository.Interfaces
  namespace: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  summary: >-
    Returns with given <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref> where its root node is also attached.

    If the given node does not have a root node yet, the RootNode property is null.
  example: []
  syntax:
    content: Task<SourceFormatNode> GetByIdWithRootNodeAsync(long id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int64
      description: Identifier of the <xref href="EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode" data-throw-if-not-resolved="false"></xref>
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}
      description: Returns <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> representing result of asynchronous operation including the result.
    content.vb: Function GetByIdWithRootNodeAsync(id As Long, cancellationToken As CancellationToken = Nothing) As Task(Of SourceFormatNode)
  overload: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithRootNodeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Input parameter is null
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The result sequence does not contain any element.
  nameWithType.vb: ISourceFormatNodeRepository.GetByIdWithRootNodeAsync(Long, CancellationToken)
  fullName.vb: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithRootNodeAsync(Long, System.Threading.CancellationToken)
  name.vb: GetByIdWithRootNodeAsync(Long, CancellationToken)
references:
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  commentId: N:EncyclopediaGalactica.Services.Document.Repository.Interfaces
  href: EncyclopediaGalactica.html
  name: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  nameWithType: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces
  spec.csharp:
  - uid: EncyclopediaGalactica
    name: EncyclopediaGalactica
    href: EncyclopediaGalactica.html
  - name: .
  - uid: EncyclopediaGalactica.Services
    name: Services
    href: EncyclopediaGalactica.Services.html
  - name: .
  - uid: EncyclopediaGalactica.Services.Document
    name: Document
    href: EncyclopediaGalactica.Services.Document.html
  - name: .
  - uid: EncyclopediaGalactica.Services.Document.Repository
    name: Repository
    href: EncyclopediaGalactica.Services.Document.Repository.html
  - name: .
  - uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces
    name: Interfaces
    href: EncyclopediaGalactica.Services.Document.Repository.Interfaces.html
  spec.vb:
  - uid: EncyclopediaGalactica
    name: EncyclopediaGalactica
    href: EncyclopediaGalactica.html
  - name: .
  - uid: EncyclopediaGalactica.Services
    name: Services
    href: EncyclopediaGalactica.Services.html
  - name: .
  - uid: EncyclopediaGalactica.Services.Document
    name: Document
    href: EncyclopediaGalactica.Services.Document.html
  - name: .
  - uid: EncyclopediaGalactica.Services.Document.Repository
    name: Repository
    href: EncyclopediaGalactica.Services.Document.Repository.html
  - name: .
  - uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces
    name: Interfaces
    href: EncyclopediaGalactica.Services.Document.Repository.Interfaces.html
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode
  commentId: T:EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode
  parent: EncyclopediaGalactica.Services.Document.Entities
  href: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode.html
  name: SourceFormatNode
  nameWithType: SourceFormatNode
  fullName: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: FluentValidation.ValidationException
  commentId: T:FluentValidation.ValidationException
  isExternal: true
  name: ValidationException
  nameWithType: ValidationException
  fullName: FluentValidation.ValidationException
- uid: Microsoft.EntityFrameworkCore.DbUpdateException
  commentId: T:Microsoft.EntityFrameworkCore.DbUpdateException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbupdateexception
  name: DbUpdateException
  nameWithType: DbUpdateException
  fullName: Microsoft.EntityFrameworkCore.DbUpdateException
- uid: Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException
  commentId: T:Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbupdateconcurrencyexception
  name: DbUpdateConcurrencyException
  nameWithType: DbUpdateConcurrencyException
  fullName: Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException
- uid: System.OperationCanceledException
  commentId: T:System.OperationCanceledException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.operationcanceledexception
  name: OperationCanceledException
  nameWithType: OperationCanceledException
  fullName: System.OperationCanceledException
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddAsync*
  commentId: Overload:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddAsync
  href: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.html#EncyclopediaGalactica_Services_Document_Repository_Interfaces_ISourceFormatNodeRepository_AddAsync_EncyclopediaGalactica_Services_Document_Entities_SourceFormatNode_System_Threading_CancellationToken_
  name: AddAsync
  nameWithType: ISourceFormatNodeRepository.AddAsync
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddAsync
- uid: System.Threading.Tasks.Task{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}
  commentId: T:System.Threading.Tasks.Task{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SourceFormatNode>
  nameWithType: Task<SourceFormatNode>
  fullName: System.Threading.Tasks.Task<EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode>
  nameWithType.vb: Task(Of SourceFormatNode)
  fullName.vb: System.Threading.Tasks.Task(Of EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode)
  name.vb: Task(Of SourceFormatNode)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode
    name: SourceFormatNode
    href: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode
    name: SourceFormatNode
    href: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode.html
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: EncyclopediaGalactica.Services.Document.Entities
  commentId: N:EncyclopediaGalactica.Services.Document.Entities
  href: EncyclopediaGalactica.html
  name: EncyclopediaGalactica.Services.Document.Entities
  nameWithType: EncyclopediaGalactica.Services.Document.Entities
  fullName: EncyclopediaGalactica.Services.Document.Entities
  spec.csharp:
  - uid: EncyclopediaGalactica
    name: EncyclopediaGalactica
    href: EncyclopediaGalactica.html
  - name: .
  - uid: EncyclopediaGalactica.Services
    name: Services
    href: EncyclopediaGalactica.Services.html
  - name: .
  - uid: EncyclopediaGalactica.Services.Document
    name: Document
    href: EncyclopediaGalactica.Services.Document.html
  - name: .
  - uid: EncyclopediaGalactica.Services.Document.Entities
    name: Entities
    href: EncyclopediaGalactica.Services.Document.Entities.html
  spec.vb:
  - uid: EncyclopediaGalactica
    name: EncyclopediaGalactica
    href: EncyclopediaGalactica.html
  - name: .
  - uid: EncyclopediaGalactica.Services
    name: Services
    href: EncyclopediaGalactica.Services.html
  - name: .
  - uid: EncyclopediaGalactica.Services.Document
    name: Document
    href: EncyclopediaGalactica.Services.Document.html
  - name: .
  - uid: EncyclopediaGalactica.Services.Document.Entities
    name: Entities
    href: EncyclopediaGalactica.Services.Document.Entities.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddChildNodeAsync*
  commentId: Overload:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddChildNodeAsync
  href: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.html#EncyclopediaGalactica_Services_Document_Repository_Interfaces_ISourceFormatNodeRepository_AddChildNodeAsync_System_Int64_System_Int64_System_Int64_System_Threading_CancellationToken_
  name: AddChildNodeAsync
  nameWithType: ISourceFormatNodeRepository.AddChildNodeAsync
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.AddChildNodeAsync
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.UpdateAsync*
  commentId: Overload:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.UpdateAsync
  href: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.html#EncyclopediaGalactica_Services_Document_Repository_Interfaces_ISourceFormatNodeRepository_UpdateAsync_EncyclopediaGalactica_Services_Document_Entities_SourceFormatNode_System_Threading_CancellationToken_
  name: UpdateAsync
  nameWithType: ISourceFormatNodeRepository.UpdateAsync
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.UpdateAsync
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.DeleteAsync*
  commentId: Overload:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.DeleteAsync
  href: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.html#EncyclopediaGalactica_Services_Document_Repository_Interfaces_ISourceFormatNodeRepository_DeleteAsync_System_Int64_System_Threading_CancellationToken_
  name: DeleteAsync
  nameWithType: ISourceFormatNodeRepository.DeleteAsync
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.DeleteAsync
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetAllAsync*
  commentId: Overload:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetAllAsync
  href: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.html#EncyclopediaGalactica_Services_Document_Repository_Interfaces_ISourceFormatNodeRepository_GetAllAsync_System_Threading_CancellationToken_
  name: GetAllAsync
  nameWithType: ISourceFormatNodeRepository.GetAllAsync
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetAllAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<SourceFormatNode>>
  nameWithType: Task<List<SourceFormatNode>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode>>
  nameWithType.vb: Task(Of List(Of SourceFormatNode))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode))
  name.vb: Task(Of List(Of SourceFormatNode))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode
    name: SourceFormatNode
    href: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode
    name: SourceFormatNode
    href: EncyclopediaGalactica.Services.Document.Entities.SourceFormatNode.html
  - name: )
  - name: )
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithChildrenAsync*
  commentId: Overload:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithChildrenAsync
  href: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.html#EncyclopediaGalactica_Services_Document_Repository_Interfaces_ISourceFormatNodeRepository_GetByIdWithChildrenAsync_System_Int64_System_Threading_CancellationToken_
  name: GetByIdWithChildrenAsync
  nameWithType: ISourceFormatNodeRepository.GetByIdWithChildrenAsync
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithChildrenAsync
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdAsync*
  commentId: Overload:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdAsync
  href: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.html#EncyclopediaGalactica_Services_Document_Repository_Interfaces_ISourceFormatNodeRepository_GetByIdAsync_System_Int64_
  name: GetByIdAsync
  nameWithType: ISourceFormatNodeRepository.GetByIdAsync
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdAsync
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync*
  commentId: Overload:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync
  href: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.html#EncyclopediaGalactica_Services_Document_Repository_Interfaces_ISourceFormatNodeRepository_GetByIdWithFlatTreeAsync_System_Int64_System_Threading_CancellationToken_
  name: GetByIdWithFlatTreeAsync
  nameWithType: ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithFlatTreeAsync
- uid: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithRootNodeAsync*
  commentId: Overload:EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithRootNodeAsync
  href: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.html#EncyclopediaGalactica_Services_Document_Repository_Interfaces_ISourceFormatNodeRepository_GetByIdWithRootNodeAsync_System_Int64_System_Threading_CancellationToken_
  name: GetByIdWithRootNodeAsync
  nameWithType: ISourceFormatNodeRepository.GetByIdWithRootNodeAsync
  fullName: EncyclopediaGalactica.Services.Document.Repository.Interfaces.ISourceFormatNodeRepository.GetByIdWithRootNodeAsync
