name: Documentation - Feature
run-name: Documentation - Feature

on:
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
        
env:
  INSTANCE: 'EncyclopediaGalactica/eg'
  ARTIFACT: 'webHelpEG2-all.zip'
  DOCKER_VERSION: '233.14389'

jobs:
  
  debug:
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "============="
          echo "=== Debug ==="
          echo "============="
          echo "github ref: " ${{ vars.GITHUB_REF }}
          echo "dotnet version: " ${{ vars.DOTNET_VERSION }}
          echo "event name: " ${{ github.event_name }}
  
  feature_branch:
    name: Feature Branch Build
    runs-on: ubuntu-latest
    needs: debug
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    permissions:
#      contents: write
#      issues: write
#      pull-requests: write
#      pages: write
#      id-token: write
    
    steps:
      - uses: actions/checkout@v4

      - name: Build docs using Writerside Docker builder
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}
          
      - name: Save artifact with build results
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: |
            artifacts/${{ env.ARTIFACT }}
          retention-days: 7
          
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: artifacts

      - name: Test documentation
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ env.INSTANCE }}

#      - run: dotnet tool update -g docfx
#
#      - run: docfx Docs/docfx.json --output Docs/_site
#
#      - name: Setup pages
#        uses: actions/configure-pages@v3
#
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v2
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN_FOR_SEMANTIC_RELEASE }}
#        with:
#          path: 'Docs/_site'
#
#      - name: Deploy to Github Pages
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN_FOR_SEMANTIC_RELEASE }}
#        id: deployment
#        uses: actions/deploy-pages@v2
          
      
